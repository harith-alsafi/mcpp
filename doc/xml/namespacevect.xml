<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="namespacevect" kind="namespace" language="C++">
    <compoundname>vect</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacevect_1a369fb2030345114147307382513a62a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::round</definition>
        <argsstring>(std::vector&lt; D &gt; &amp;a, int dp=0)</argsstring>
        <name>round</name>
        <param>
          <type>std::vector&lt; D &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>int</type>
          <declname>dp</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Rounding the vector by using <ref refid="namespacemth_1aaf1bcab086ef624b1fb0cdff232f1db9" kindref="member">mth::round</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>D</parametername>
</parameternamelist>
<parameterdescription>
<para>Type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>vector input </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dp</parametername>
</parameternamelist>
<parameterdescription>
<para>number of decimal places </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::vector&lt;D&gt;: vector output </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="33" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="33" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a1394e5e69aa94634a23d6ba50299846a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>D</type>
        <definition>D vect::min</definition>
        <argsstring>(std::vector&lt; D &gt; &amp;a)</argsstring>
        <name>min</name>
        <param>
          <type>std::vector&lt; D &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="44" column="3" bodyfile="includes/numerical/vect.hpp" bodystart="44" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a11ded1664ca44b23ae59e804521cef0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>D</type>
        <definition>D vect::max</definition>
        <argsstring>(std::vector&lt; D &gt; &amp;a)</argsstring>
        <name>max</name>
        <param>
          <type>std::vector&lt; D &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="51" column="3" bodyfile="includes/numerical/vect.hpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a441fcc00c9f98c6363a2e1869c4f127a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>D</type>
        <definition>D vect::sum</definition>
        <argsstring>(std::vector&lt; D &gt; &amp;a)</argsstring>
        <name>sum</name>
        <param>
          <type>std::vector&lt; D &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="58" column="3" bodyfile="includes/numerical/vect.hpp" bodystart="58" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a90382b0b99c00844e306f9ae077ce73b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::sort_asc</definition>
        <argsstring>(std::vector&lt; D &gt; &amp;a)</argsstring>
        <name>sort_asc</name>
        <param>
          <type>std::vector&lt; D &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="68" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="68" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1afbea8e45015bcce9e391e2b8e8db9d64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::abs</definition>
        <argsstring>(std::vector&lt; D &gt; &amp;a)</argsstring>
        <name>abs</name>
        <param>
          <type>std::vector&lt; D &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="73" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="73" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a642b4b32d324db19672c165764af754f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::pow</definition>
        <argsstring>(std::vector&lt; D &gt; a, D b)</argsstring>
        <name>pow</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>D</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>vector^b </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>D</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::vector&lt;D&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="86" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="86" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a042b633aa88aada869f95b10f6486cc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::pow</definition>
        <argsstring>(std::vector&lt; D &gt; a, std::vector&lt; D &gt; b)</argsstring>
        <name>pow</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
<para>vector^vector </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>D</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::vector&lt;D&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="104" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="104" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a4ed281a54d6641aa8889f5e9186a032a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::sin</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>sin</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="119" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="119" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1adb244508ad50cd51b3e69bdc9520d001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::cos</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>cos</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="124" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="124" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a87dc4f4b7e0fe76495c8c3ca7c1c3517" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::tan</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>tan</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="129" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="129" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a44e0da3a069b473e11a868489e393215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::sec</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>sec</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="134" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="134" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a1b33d3d1d1cbcea95bdfa09b84537f22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::csc</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>csc</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="139" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="139" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1aa4e9ddc4a2a1753baf181c1905d4ea1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::cot</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>cot</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="144" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="144" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a9a7872d180ff723efd198518aa86ef85" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::asin</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>asin</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="149" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="149" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a4d7d09eb59b6191047a3e2d2cdf12bfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::acos</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>acos</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="154" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="154" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a0a0d999c1eed3bdc0313dee7aa06ff6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::atan</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>atan</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="159" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="159" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a45a1af0f45ec09f483db288217ab850c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::asec</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>asec</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="164" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a1e18837c302ab7a0f536e2dda05ab174" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::acsc</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>acsc</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="169" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a1726d9d1d70cb4d754d3e7a9e991a549" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::acot</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>acot</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="174" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="174" bodyend="176"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1ab7dbb886582650062493a2947de738c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::sinh</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>sinh</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="180" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="180" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1ae23cf8293df2d93f3f9ac375dabb2d64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::cosh</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>cosh</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="185" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="185" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a76faf800ab6012b9790019a17eab0182" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::tanh</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>tanh</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="190" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="190" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a664340fc9a2a2ac2c0c14cb542a29f17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::sech</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>sech</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="195" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="195" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a66f438dc26a3cb809c27cc51830ab1cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::csch</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>csch</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="200" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="200" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1ae9cf82d76873b9d1dc28964e65dd69fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::coth</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>coth</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="205" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="205" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1ae263bfcd0bfa88c9ddfb6f04fa43fe0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::asinh</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>asinh</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="210" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="210" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a6231591d7302ae56733976534de9b9cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::acosh</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>acosh</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="215" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="215" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1ab5e5891ec096a5a1ba94067f5f04c67d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::atanh</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>atanh</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="220" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="220" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a6d59da8ecdbb7616c06b2b0550fdd526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::asech</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>asech</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="225" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="225" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a320a22f92d7992218dd147f744c035ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::acsch</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>acsch</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="230" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="230" bodyend="232"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1ab66fa3b791b0ed95fb7bc995223e694c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::acoth</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>acoth</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="235" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="235" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1aefc88801242ad35ac9714c221ec03573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::exp</definition>
        <argsstring>(std::vector&lt; D &gt; a)</argsstring>
        <name>exp</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="241" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="241" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a1f8e4036ea4a5bede28b045061e59fbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
          <param>
            <type>typename LAMBDA</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::vec_op</definition>
        <argsstring>(LAMBDA f, std::vector&lt; D &gt; &amp;x)</argsstring>
        <name>vec_op</name>
        <param>
          <type>LAMBDA</type>
          <declname>f</declname>
        </param>
        <param>
          <type>std::vector&lt; D &gt; &amp;</type>
          <declname>x</declname>
        </param>
        <briefdescription>
<para>Runs lambda function on vector array. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>D</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>LAMBDA</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::vector&lt;D&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="257" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="257" bodyend="264"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a777d4eff1699dc4d1faf0c848baeebda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::difference</definition>
        <argsstring>(std::vector&lt; D &gt; &amp;a)</argsstring>
        <name>difference</name>
        <param>
          <type>std::vector&lt; D &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>difference of elements in vector </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>D</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::vector&lt;D&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="274" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="274" bodyend="281"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a2da816be096db605cfeb29720fb77a82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::averages</definition>
        <argsstring>(std::vector&lt; D &gt; &amp;a)</argsstring>
        <name>averages</name>
        <param>
          <type>std::vector&lt; D &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
<para>average of elements in vector </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>D</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::vector&lt;D&gt; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="291" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="291" bodyend="298"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1ae004755a986a5e4a9578ce6c8f503128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::arange</definition>
        <argsstring>(D start, D end, D diff)</argsstring>
        <name>arange</name>
        <param>
          <type>D</type>
          <declname>start</declname>
        </param>
        <param>
          <type>D</type>
          <declname>end</declname>
        </param>
        <param>
          <type>D</type>
          <declname>diff</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="301" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="301" bodyend="308"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a8906c773561edd0cb239ff19f923a55a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::linspace</definition>
        <argsstring>(D start, D end, int count)</argsstring>
        <name>linspace</name>
        <param>
          <type>D</type>
          <declname>start</declname>
        </param>
        <param>
          <type>D</type>
          <declname>end</declname>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="311" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="311" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1a7f6070071515a8468e36406cde924172" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::dot</definition>
        <argsstring>(std::vector&lt; D &gt; a, std::vector&lt; D &gt; b)</argsstring>
        <name>dot</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="316" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="316" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="namespacevect_1aeb203d6bfe630c40ef431fe8438820d2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename D</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; D &gt;</type>
        <definition>std::vector&lt;D&gt; vect::cross</definition>
        <argsstring>(std::vector&lt; D &gt; a, std::vector&lt; D &gt; b)</argsstring>
        <name>cross</name>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>std::vector&lt; D &gt;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="includes/numerical/vect.hpp" line="324" column="13" bodyfile="includes/numerical/vect.hpp" bodystart="324" bodyend="329"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Contains functions regarding vector operations and 1D array mathematics. </para>
    </briefdescription>
    <detaileddescription>
<para>Short for vector </para>
    </detaileddescription>
    <location file="includes/numerical/vect.hpp" line="21" column="1"/>
  </compounddef>
</doxygen>
