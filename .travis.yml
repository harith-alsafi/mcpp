language: cpp
os:
  - linux
  - osx
  - windows
before_install:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        [[ ! -f C:/tools/msys64/msys2_shell.cmd ]] && rm -rf C:/tools/msys64
        choco uninstall -y mingw
        choco upgrade --no-progress -y msys2
        export msys2='cmd //C RefreshEnv.cmd '
        export msys2+='& set MSYS=winsymlinks:nativestrict '
        export msys2+='& C:\\tools\\msys64\\msys2_shell.cmd -defterm -no-start'
        export mingw64="$msys2 -mingw64 -full-path -here -c "\"\$@"\" --"
        export msys2+=" -msys2 -c "\"\$@"\" --"
        $msys2 pacman --sync --noconfirm --needed mingw-w64-x86_64-toolchain
        ## Install more MSYS2 packages from https://packages.msys2.org/base here
        taskkill //IM gpg-agent.exe //F  # https://travis-ci.community/t/4967
        export PATH=/C/tools/msys64/mingw64/bin:$PATH
        export MAKE=mingw32-make  # so that Autotools can find it
        choco install cmake
        choco install make
        ;;
    esac

before_cache:
- |-
    case $TRAVIS_OS_NAME in
      windows)
        # https://unix.stackexchange.com/a/137322/107554
        $msys2 pacman --sync --clean --noconfirm
        ;;
    esac

cache:
    directories:
    - $HOME/AppData/Local/Temp/chocolatey
    - /C/tools/msys64
install:
  - if [ $TRAVIS_OS_NAME = 'linux' ]; then
    sudo apt-get update;
    sudo apt-get -y install libpthread-stubs0-dev;
    sudo apt-get -y install libgl1-mesa-dev;
    sudo apt-get -y install libxrandr-dev;
    sudo apt-get -y install libfreetype6-dev;
    sudo apt-get -y install libglew1.5-dev;
    sudo apt-get -y install libjpeg8-dev;
    sudo apt-get -y install libsndfile1-dev;
    sudo apt-get -y install libopenal-dev;
    sudo apt-get -y install libx11-dev;
    sudo apt-get -y install xorg-dev;
    sudo apt-get -y install freeglut3-dev;
    sudo apt-get -y install libudev-dev; 
    # first we create a directory for the CMake binaries
    DEPS_DIR="${TRAVIS_BUILD_DIR}/deps";
    mkdir ${DEPS_DIR} && cd ${DEPS_DIR};
    # we use wget to fetch the cmake binaries
    travis_retry wget --no-check-certificate https://cmake.org/files/v3.15/cmake-3.15.0-Linux-x86_64.tar.gz;
    # this is optional, but useful:
    # do a quick md5 check to ensure that the archive we downloaded did not get compromised
    echo "f3546812c11ce7f5d64dc132a566b749 *cmake-3.15.0-Linux-x86_64.tar.gz" > cmake_md5.txt;
    md5sum -c cmake_md5.txt;
    # extract the binaries; the output here is quite lengthy,
    # so we swallow it to not clutter up the travis console
    tar -xvf cmake-3.15.0-Linux-x86_64.tar.gz > /dev/null;
    mv cmake-3.15.0-Linux-x86_64 cmake-install;
    # add both the top-level directory and the bin directory from the archive
    # to the system PATH. By adding it to the front of the path we hide the
    # preinstalled CMake with our own.
    PATH=${DEPS_DIR}/cmake-install:${DEPS_DIR}/cmake-install/bin:$PATH;
    # don't forget to switch back to the main build directory once you are done
    cd ${TRAVIS_BUILD_DIR};
    fi


before_script:
- mkdir -p build; cd build;
- if [ $TRAVIS_OS_NAME = 'linux' -o $TRAVIS_OS_NAME = 'osx' ]; then cmake ..;fi
- |-
    case $TRAVIS_OS_NAME in
      windows)
        cmake -G "Unix Makefiles" ..
        ;;
    esac
    
script:
  - make